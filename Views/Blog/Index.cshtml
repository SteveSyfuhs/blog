@model IEnumerable<Post>
@{
    int currentPage = int.Parse(ViewContext.RouteData.Values["page"] as string ?? "0");
    bool includeTitle = ViewData.ContainsKey("IncludeTitle") && (bool)ViewData["IncludeTitle"];

    var highlight = Model.FindHighlight();
    var snapshots = Model.FindSnapshots(highlight);
}

<div class="container">
    @if (includeTitle)
    {
        <div class="post">
            <header class="no-media">
                <div>
                    <h1>@(ViewData["Highlight"] ?? ViewData["Title"])</h1>
                </div>
            </header>
        </div>
    }

    @if (ViewData["Category"] != null)
    {
        <div class="post">
            <header class="no-media">
                <div>
                    @if (highlight == null)
                    {
                        <h1>Posted in @ViewData["Category"]</h1>
                    }
                    else
                    {
                        <h2>Posted in @ViewData["Category"]</h2>
                    }
                </div>
            </header>
        </div>
    }

    <div class="row featured">
        @if (highlight != null)
        {
            <div class="col-lg-7">
                @{
                    await Html.RenderPartialAsync("_PostHighlight.cshtml", highlight);
                }
            </div>
        }
        <div class="@(highlight != null ? "col-lg-5" : "col-lg-12")">
            <div class="row">
                @foreach (var post in snapshots.Take(4))
                {
                    <div class="col-lg-6">
                        @{
                            await Html.RenderPartialAsync("_PostSnapshot.cshtml", post);
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row history">
        @foreach (var post in snapshots.Skip(4))
        {
            <div class="col-lg-4">
                @{
                    await Html.RenderPartialAsync("_PostSnapshot.cshtml", post);
                }
            </div>
        }
    </div>

    <div class="post">
        <div>
            <nav class="pagination container" aria-label="Pagination">
                @if (!string.IsNullOrWhiteSpace(ViewData["prev"] as string))
                {
                    <a rel="prev" href="@ViewData["prev"]" title="Older posts">&laquo; Older Posts</a>
                }

                @if (currentPage > 0)
                {
                    <a rel="next" href="@ViewData["next"]" title="Newer posts">Newer Posts &raquo;</a>
                }

                @section Head {
                    @if (!string.IsNullOrWhiteSpace(ViewData["prev"] as string))
                    {
                        <link rel="prev" href="@ViewData["prev"]" />
                    }
                    @if (currentPage > 0)
                    {
                        <link rel="next" href="@ViewData["next"]" />
                    }
                }
            </nav>
        </div>
    </div>
</div>

@{await Html.RenderPartialAsync("_SocialSharing", ViewData["Title"]);}
